{"version":3,"file":"component---src-pages-search-grid-js-0ec6a0d34d745a159b76.js","mappings":"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","sources":["webpack://justcamp-gatsby/./src/components/CheckBox/Checkbox.js","webpack://justcamp-gatsby/./src/components/CheckboxRadio/CheckboxRadio.js","webpack://justcamp-gatsby/./src/pages/search-grid.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst CheckBox = ({handleFilters, list}) => {\r\n    const [Checked, setChecked] = useState([]);\r\n\r\n    const handleToggle = (value) => {\r\n        const currentIndex = Checked.indexOf(value);\r\n        const newChecked = [...Checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n\r\n        setChecked(newChecked)\r\n        handleFilters(newChecked)\r\n    };\r\n\r\n    const renderCheckboxLists = () => list && list.map((value, index) => (\r\n        <li key={index}>\r\n            <div className=\"checkbox ml-3\">\r\n                <label>\r\n                    <input\r\n                        style={{ color: \"black\" }}\r\n                        onChange={() => handleToggle(value.name)}\r\n                        type=\"checkbox\"\r\n                        checked={Checked.indexOf(value.name) === -1 ? false : true}/>\r\n                        {\"  \"}\r\n                    {value.label}\r\n                </label>\r\n            </div>\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <ul className=\"list-unstyled\">\r\n            {renderCheckboxLists()}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React, {useState} from 'react';\r\n\r\nconst CheckboxRadio = ({handleFilters, list}) => {\r\n    const [Value, setValue] = useState('0');\r\n\r\n    const renderRadioBox = () => (\r\n        list && list.map((value) => (\r\n            <div key={value.id} className=\"checkbox ml-3\">\r\n                <label>\r\n                    <input\r\n                        style={{\"border-radius\": \"50%\"}}\r\n                        type=\"radio\"\r\n                        name={`${value.name}`}\r\n                        value={`${value.value}`}/>\r\n                    <span className=\"cr\"></span>\r\n                    {\"   \"}{value.label}\r\n                </label>\r\n            </div>\r\n        ))\r\n    );\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        handleFilters(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <ul className=\"list-unstyled\">\r\n            <li onChange={handleChange} value={Value}>\r\n                {renderRadioBox()}\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default CheckboxRadio;","import React, { useState } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport PageWrapper from \"../components/PageWrapper\";\r\nimport { Select } from \"../components/Core\";\r\nimport { useEffect } from \"react\";\r\nimport CheckBox from \"../components/CheckBox/Checkbox\";\r\n\r\nimport imgB1 from \"../assets/image/l1/png/feature-brand-1.png\";\r\n\r\nimport imgF from \"../assets/image/svg/icon-fire-rounded.svg\";\r\nimport iconL from \"../assets/image/svg/icon-loaction-pin-black.svg\";\r\nimport iconS from \"../assets/image/svg/icon-suitecase.svg\";\r\nimport iconC from \"../assets/image/svg/icon-clock.svg\";\r\n\r\n\r\nimport styled from \"styled-components\";\r\nimport { Range, getTrackBackground } from \"react-range\";\r\nimport { employmentType, experienceYear, postTime } from \"../components/Sidebar/MenuData\";\r\nimport { JobPostServiceIml } from \"../actions/user-actions\";\r\nimport CheckboxRadio from \"../components/CheckboxRadio/CheckboxRadio\";\r\nimport axios from \"axios\";\r\nimport { API_BASE_URL, REDIRECT_BASE_URL } from \"../utils/constants/url\";\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst STEP = 50;\r\nconst MIN = 0;\r\nconst MAX = 50000;\r\n\r\nconst CheckStyled = styled.span`\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #2b3940 !important;\r\n  font-size: 16px;\r\n  color: inherit;\r\n  &::before {\r\n    content: \"\\f0c8\";\r\n    font-weight: 400;\r\n    font-family: \"Font Awesome 5 Free\";\r\n    display: inline-block;\r\n    color: #7e8989;\r\n    margin-right: 11px;\r\n    margin-top: 2px;\r\n  }\r\n  &.active {\r\n    color: #2b3940 !important;\r\n    font-weight: 600;\r\n    &::before {\r\n      content: \"\\f14a\";\r\n      font-weight: 900;\r\n      color: #00b074;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Check = ({ children }) => {\r\n  const [active, setActive] = useState(false);\r\n\r\n\r\n  return (\r\n    <CheckStyled\r\n      className={`toggle-item ${active ? \"active\" : \"\"}`}\r\n      onClick={() => {\r\n        setActive(!active);\r\n      }}\r\n    >\r\n      {children}\r\n    </CheckStyled>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst SearchGrid = () => {\r\n  const { t, i18n } = useTranslation()\r\n  const defaultCountries = [\r\n    { id: 0, value: \"\", label: t('defaultCountries.selectCity') },\r\n    { id: 1, value: \"Tp Hồ Chí Minh\", label: t('defaultCountries.HCM') },\r\n    { id: 2, value: \"Hà Nội\", label: t('defaultCountries.HaNoi') },\r\n    { id: 3, value: \"Cần Thơ\", label: t('defaultCountries.CanTho') },\r\n    { id: 4, value: \"Đà Nẵng\", label: t('defaultCountries.DaNang') },\r\n  ];\r\n  const id = 1;\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSucces] = useState(\"\");\r\n  const [title, setTitle] = useState([]);\r\n  const [city, setCity] = useState([]);\r\n  const [isList, setIsList] = useState(true);\r\n  const [rangeValues, setRangeValues] = useState([100, 10000]);\r\n\r\n  const [jobs, setJobs] = useState([]);\r\n  useEffect(() => {\r\n    JobPostServiceIml.getAllActiveJobPosts().then((response) => { setJobs(response.data.data) });\r\n  }, [])\r\n\r\n  const [auth, setAuth] = useState(undefined);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  useEffect(() => {\r\n    setAuth(localStorage.getItem(\"userRole\"));\r\n    setIsAuthenticated(localStorage.getItem(\"isLoggedIn\"));\r\n  })\r\n\r\n  const [filter, setFilter] = useState({\r\n    minBudget: rangeValues[0],\r\n    maxBudget: rangeValues[1],\r\n    experienceYear: [],\r\n    employmentTypes: [],\r\n    numDayAgo: -1,\r\n    titles: [],\r\n    cities: [],\r\n    positions: [],\r\n    skills: [],\r\n    others: []\r\n  });\r\n\r\n  const [selectedOptions, setSelectedOptions] = useState(0);\r\n  const handleChange = (event) => {\r\n    setCity(event.value);\r\n    setSelectedOptions(event.id);\r\n    console.log(event.id);\r\n  };\r\n\r\n  const saveForJob = (id) => {\r\n    if (!isAuthenticated) {\r\n      setError(\"You must login to save for jobs\");\r\n    } else {\r\n      axios\r\n        .get(\r\n          API_BASE_URL + \"/candidate/save-job-post/\" + id,\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.data.status == 200) {\r\n            //show success message\r\n            setSucces(\"Successfuly saved for job\");\r\n            setError(\"\")\r\n          } else if (response.data.errMsg) {\r\n            setError(response.data.errMsg)\r\n            setSucces(\"\")\r\n          } else {\r\n            setSucces(\"\");\r\n            setError(\"Request Failed\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const applyForJob = (id) => {\r\n    if (!isAuthenticated) {\r\n      setError(\"You must login to apply for jobs\")\r\n    } else {\r\n      axios\r\n        .get(\r\n          API_BASE_URL + \"/candidate/apply-job-post/\" + id,\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.data.status == 200) {\r\n            setSucces(\"Successfuly applied for job\")\r\n            setError(\"\")\r\n            const countTimer = setInterval(() => {\r\n            }, 1000);\r\n            clearInterval(countTimer);\r\n          } else if (response.data.status != 200) {\r\n            console.log(response.data.status)\r\n            switch (response.data.status) {\r\n              case 403:\r\n                setError(response.data.errMsg + \" .You can register in\" + REDIRECT_BASE_URL + \"/registerOfUser\")\r\n                // window.location.assign(REDIRECT_BASE_URL + \"/registerOfUser\");\r\n                break;\r\n              default:\r\n                setSucces(\"\");\r\n                setError(response.data.errMsg)\r\n              //return 'foo';\r\n            }\r\n            //setError(response.data.errMsg)\r\n            //console.error(response.data.errMsg);\r\n            //window.location.assign(REDIRECT_BASE_URL + \"/registerOfUser\");\r\n          } else {\r\n\r\n            setSucces(\"Request Failed\")\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n\r\n        });\r\n    }\r\n  };\r\n\r\n  const getProducts = (variables) => {\r\n    JobPostServiceIml.getJobByFilterParams(variables).then((response) => { setJobs(response.data.data); });\r\n  };\r\n\r\n\r\n  const jobGrid = jobs.map(job => {\r\n    return <div className=\"col-12 col-lg-6\">\r\n      <div className=\"bg-white px-8 pt-9 pb-7 rounded-4 mb-9 feature-cardOne-adjustments\">\r\n        <div className=\"d-block mb-7\">\r\n          <Link to={\"/groups/job-details/\" + job.id}>\r\n            <img src={imgB1} alt=\"\" />\r\n          </Link>\r\n        </div>\r\n        <Link\r\n          to={\"/groups/job-details/\" + job.id}\r\n          className=\"font-size-3 d-block mb-0 text-gray\"\r\n        >\r\n          {job.workplaceType}\r\n        </Link>\r\n        <h2 className=\"mt-n4\">\r\n          <Link\r\n            to=\"/#\"\r\n            className=\"font-size-7 text-black-2 font-weight-bold mb-4\"\r\n          >\r\n            {job.title}\r\n          </Link>\r\n        </h2>\r\n        <ul className=\"list-unstyled mb-1 card-tag-list\">\r\n          <li>\r\n            <Link\r\n              to=\"/#\"\r\n              className=\"bg-regent-opacity-15 text-denim font-size-3 rounded-3\"\r\n            >\r\n              <i className=\"icon icon-pin-3 mr-2 font-weight-bold\"></i>{\" \"}\r\n              {job.city}\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to=\"/#\"\r\n              className=\"bg-regent-opacity-15 text-orange font-size-3 rounded-3\"\r\n            >\r\n              <i className=\"fa fa-briefcase mr-2 font-weight-bold\"></i>{\" \"}\r\n              {job.employmentType}\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to=\"/#\"\r\n              className=\"bg-regent-opacity-15 text-eastern font-size-3 rounded-3\"\r\n            >\r\n              <i className=\"fa fa-dollar-sign mr-2 font-weight-bold\"></i>{\" \"}\r\n              {job.minBudget} - {job.maxBudget}K $\r\n            </Link>ob-details\r\n          </li>\r\n        </ul>\r\n        <p className=\"mb-7 font-size-4 text-gray\">\r\n          {job.description}\r\n        </p>\r\n        <div className=\"card-btn-group\">\r\n          {(\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-green text-uppercase btn-medium rounded-3\"\r\n              onClick={() => applyForJob(job.id)}\r\n            >\r\n              Apply Now\r\n            </button>\r\n          )}\r\n          {(\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-outline-mercury text-black-2 text-uppercase btn-medium rounded-3\"\r\n              onClick={() => saveForJob(job.id)}\r\n            >\r\n              <i className=\"icon icon-bookmark-2 font-weight-bold mr-4 font-size-4\"></i>{\" \"}\r\n              Save it\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  });\r\n\r\n  const jobList = jobs.map(job => {\r\n    return <div className=\"mb-10 col-12\">\r\n      {/* <!-- Single Featured Job --> */}\r\n      <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 \">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"media align-items-center\">\r\n              <div className=\"square-72 d-block mr-8\">\r\n                <img src={imgB1} alt=\"\" />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"mb-0\">\r\n                  <Link\r\n                    to={\"/groups/job-details/\" + job.id}\r\n                    className=\"font-size-6 heading-default-color\"\r\n                  >\r\n                    {job.title}\r\n                  </Link>\r\n                </h3>\r\n                <Link\r\n                  to={\"/groups/job-details/\" + job.id}\r\n                  className=\"font-size-3 text-default-color line-height-2\"\r\n                >\r\n                  {job.workplaceType}\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 text-right pt-7 pt-md-5\">\r\n            <div className=\"media justify-content-md-end\">\r\n              <div className=\"image mr-5 mt-2\">\r\n                <img src={imgF} alt=\"\" />\r\n              </div>\r\n              <p className=\"font-weight-bold font-size-7 text-hit-gray mb-0\">\r\n                <span className=\"text-black-2\">{job.minBudget} - {job.maxBudget}K $</span> PLN\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row pt-8\">\r\n          <div className=\"col-md-7\">\r\n            <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\r\n              {job.description}\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-md-5\">\r\n            <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\r\n              <li className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\">\r\n                <span\r\n                  className=\"mr-4\"\r\n                  css={`\r\n                  margin-top: -2px;\r\n                `}\r\n                >\r\n                  <img src={iconL} alt=\"\" />\r\n                </span>\r\n                <span className=\"font-weight-semibold\">\r\n                  {job.address}\r\n                </span>\r\n              </li>\r\n              <li className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\">\r\n                <span\r\n                  className=\"mr-4\"\r\n                  css={`\r\n                  margin-top: -2px;\r\n                `}\r\n                >\r\n                  <img src={iconS} alt=\"\" />\r\n                </span>\r\n                <span className=\"font-weight-semibold\">\r\n                  {job.employmentType}\r\n                </span>\r\n              </li>\r\n              <li className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\">\r\n                <span\r\n                  className=\"mr-4\"\r\n                  css={`\r\n                  margin-top: -2px;\r\n                `}\r\n                >\r\n                  <img src={iconC} alt=\"\" />\r\n                </span>\r\n                <span className=\"font-weight-semibold\">\r\n                  {job.createTime}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <!-- End Single Featured Job --> */}\r\n    </div>\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    handleFilters(event.target[0].value, event.target[0].name);\r\n    handleFilters(city, \"cities\");\r\n    setError(\"\");\r\n    setSucces(\"\");\r\n  }\r\n\r\n  const handleNumber = (value) => {\r\n    return parseInt(value, 10);\r\n  };\r\n\r\n\r\n  const handleFilters = (filters, category) => {\r\n    const newFilters = filter\r\n    newFilters[category] = filters\r\n\r\n    if (category === \"minBudget\") {\r\n      let minSalaryValues = handleNumber(filters)\r\n      newFilters[category] = minSalaryValues\r\n    }\r\n\r\n    if (category === \"maxBudget\") {\r\n      let maxSalaryValues = handleNumber(filters)\r\n      newFilters[category] = maxSalaryValues\r\n    }\r\n\r\n    if (category === \"experienceYear\" || category === \"titles\" || (category === \"cities\")) {\r\n      newFilters[category] = [filters]\r\n    }\r\n    if ((category === \"cities\" && !city.length)) {\r\n      newFilters[category] = []\r\n    }\r\n    if ((category === \"numDayAgo\" && !postTime.length)) {\r\n      let numDayAgo = handleNumber(filters)\r\n      newFilters[category] = numDayAgo\r\n    }\r\n    setFilter(newFilters);\r\n    getProducts(newFilters);\r\n    setError(\"\");\r\n    setSucces(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageWrapper>\r\n        <div className=\"bg-default-1 pt-26 pt-lg-28 pb-13 pb-lg-25\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-4 col-xs-8\">\r\n                <div className=\"widgets mb-11\">\r\n                  <h4 className=\"font-size-6 font-weight-semibold mb-6\">Job Type</h4>\r\n                  <ul className=\"list-unstyled filter-check-list\">\r\n                    <CheckBox list={employmentType}\r\n                      handleFilters={(filters) => handleFilters(filters, \"employmentTypes\")} />\r\n                  </ul>\r\n                </div>\r\n                <div className=\"widgets mb-11 \">\r\n                  <div className=\"d-flex align-items-center pr-15 pr-xs-0 pr-md-0 pr-xl-22\">\r\n                    <h4 className=\"font-size-6 font-weight-semibold mb-6 w-75\">\r\n                      Salary Range\r\n                    </h4>\r\n                    {/* <!-- Range Slider --> */}\r\n\r\n                    <div className=\"slider-price w-25 text-right mr-7\">\r\n                      <p className=\"font-weight-bold\">\r\n                        <span\r\n                          className=\"text-primary font-weight-semibold font-size-4 \"\r\n                          css={`\r\n                  white-space: nowrap;\r\n                `}\r\n                        >\r\n                          ${rangeValues[0].toFixed()} - {rangeValues[1].toFixed()}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"graph text-center mx-0 mt-5 position-relative chart-postion\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                  <div className=\"range-slider\">\r\n                    <>\r\n                      <Range\r\n                        values={rangeValues}\r\n                        step={STEP}\r\n                        min={MIN}\r\n                        max={MAX}\r\n                        onChange={(values) => {\r\n                          setRangeValues(values);\r\n                          handleFilters(values[0], \"minBudget\");\r\n                          handleFilters(values[1], \"maxBudget\")\r\n                        }}\r\n                        renderTrack={({ props, children }) => (\r\n                          <div\r\n                            role=\"button\"\r\n                            tabIndex={0}\r\n                            onMouseDown={props.onMouseDown}\r\n                            onTouchStart={props.onTouchStart}\r\n                            style={{\r\n                              ...props.style,\r\n                              height: \"15px\",\r\n                              display: \"flex\",\r\n                              width: \"290px\",\r\n                            }}\r\n                          >\r\n                            <div\r\n                              ref={props.ref}\r\n                              style={{\r\n                                height: \"5px\",\r\n                                width: \"100%\",\r\n                                borderRadius: \"4px\",\r\n                                background: getTrackBackground({\r\n                                  values: rangeValues,\r\n                                  colors: [\"#ccc\", \"#00b074\", \"#ccc\"],\r\n                                  min: MIN,\r\n                                  max: MAX,\r\n                                }),\r\n                                alignSelf: \"center\",\r\n                              }}\r\n                            >\r\n                              {children}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        renderThumb={({ props, isDragged }) => (\r\n                          <div\r\n                            {...props}\r\n                            style={{\r\n                              ...props.style,\r\n                              height: \"24px\",\r\n                              width: \"24px\",\r\n                              borderRadius: \"50%\",\r\n                              backgroundColor: \"#FFF\",\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              alignItems: \"center\",\r\n                              boxShadow: \"none !important\",\r\n                              outline: \"none !important\",\r\n                            }}\r\n                            css={`\r\n                    &:focus {\r\n                      outline: none !important;\r\n                    }\r\n                  `}\r\n                          ></div>\r\n                        )}\r\n                      />\r\n                    </>\r\n                  </div>\r\n                </div>\r\n                <div className=\"widgets mb-11\">\r\n                  <h4 className=\"font-size-6 font-weight-semibold mb-6\">\r\n                    Experience Level{\" \"}\r\n                  </h4>\r\n                  <ul className=\"list-unstyled filter-check-list\">\r\n                    <CheckboxRadio list={experienceYear}\r\n                      handleFilters={(filters) => handleFilters(filters, \"experienceYear\")} />\r\n                  </ul>\r\n                </div>\r\n                <div className=\"widgets mb-11\">\r\n                  <h4 className=\"font-size-6 font-weight-semibold mb-6\">Posted Time</h4>\r\n                  <ul className=\"list-unstyled filter-check-list\">\r\n                    <CheckboxRadio list={postTime} value={postTime}\r\n                      handleFilters={(filters) => handleFilters(filters, \"numDayAgo\")} />\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 col-md-8 col-xs-12 \">\r\n                {/* <!-- form --> */}\r\n                <form onSubmit={handleSubmit}\r\n                  className=\"search-form search-2-adjustment ml-lg-0 ml-md-15\"\r\n                >\r\n                  <div className=\"filter-search-form-2 bg-white rounded-sm shadow-7 pr-6 py-6 pl-6\">\r\n                    <div className=\"filter-inputs\">\r\n                      <div className=\"form-group position-relative w-lg-45 w-xl-40 w-xxl-45\">\r\n                        <input\r\n                          className=\"form-control focus-reset pl-13\"\r\n                          type=\"text\"\r\n                          value={title}\r\n                          name=\"titles\"\r\n                          onChange={(e) => setTitle(e.target.value)}\r\n                          placeholder=\"UI Designer\"\r\n                        />\r\n                        <span className=\"h-100 w-px-50 pos-abs-tl d-flex align-items-center justify-content-center font-size-6\">\r\n                          <i className=\"icon icon-zoom-2 text-primary font-weight-bold\"></i>\r\n                        </span>\r\n                      </div>\r\n                      {/* <!-- .select-city starts --> */}\r\n                      <div className=\"form-group position-relative w-lg-55 w-xl-60 w-xxl-55\">\r\n                        <Select\r\n                          name=\"cities\"\r\n                          onChange={handleChange}\r\n                          placeholder={t('defaultCountries.selectCity')}\r\n                          options={defaultCountries}\r\n                          className=\"pl-8 h-100 arrow-3 font-size-4 d-flex align-items-center w-100\"\r\n                          border={false}\r\n                          isSearchable={true}\r\n                          value={defaultCountries[selectedOptions]}\r\n                        />\r\n\r\n                        <span className=\"h-100 w-px-50 pos-abs-tl d-flex align-items-center justify-content-center font-size-6\">\r\n                          <i className=\"icon icon-pin-3 text-primary font-weight-bold\"></i>\r\n                        </span>\r\n                      </div>\r\n                      {/* <!-- ./select-city ends --> */}\r\n                    </div>\r\n                    <div className=\"button-block\">\r\n                      <button className=\"btn btn-primary line-height-reset h-100 btn-submit w-100 text-uppercase\">\r\n                        Search\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <div className=\"pt-12 ml-lg-0 ml-md-15\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <h5 className=\"font-size-4 font-weight-normal text-default-color\">\r\n                      <span className=\"heading-default-color\">{jobs.length}</span>\r\n                      {\" \"}results for{\" \"}\r\n                      <span className=\"heading-default-color\">your filter</span>\r\n                    </h5>\r\n                    <div className=\"d-flex align-items-center result-view-type\">\r\n                      <button\r\n                        style={{ outline: \"none\", border: \"none\" }}\r\n                        className=\"heading-default-color pl-5 font-size-6 hover-text-hitgray\"\r\n                        onClick={() => {\r\n                          setIsList(true);\r\n                        }}\r\n                      >\r\n                        <i className=\"fa fa-list-ul\" style={isList ? { color: \"gray\" } : { color: \"black\" }}></i>\r\n                      </button>\r\n                      <button\r\n                        style={{ outline: \"none\", border: \"none\" }}\r\n                        className=\"heading-default-color pl-5 font-size-6 hover-text-hitgray\"\r\n                        onClick={(e) => {\r\n                          setIsList(false);\r\n                        }}\r\n                      >\r\n                        <i className=\"fa fa-th-large\" style={!isList ? { color: \"gray\" } : { color: \"black\" }}></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pt-6\">\r\n                    {error ? <div className=\"alert alert-danger col-12\" role=\"alert\">{error}</div> : null}\r\n                    {success ? <div className=\"success alert-success col-12\" role=\"alert\">{success}</div> : null}\r\n                    <div className=\"row justify-content-center\">\r\n                      {/* <!-- Start Feature One --> */}\r\n                      {isList ? jobList : jobGrid}\r\n                      {/* <!-- End Feature One --> */}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-center pt-5 pt-lg-13\">\r\n                    <Link\r\n                      to=\"/#\"\r\n                      className=\"text-green font-weight-bold text-uppercase font-size-3 d-flex align-items-center justify-content-center\"\r\n                    >\r\n                      Load More{\" \"}\r\n                      <i className=\"fas fa-sort-down ml-3 mt-n2 font-size-4\"></i>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                {/* <!-- form end --> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </PageWrapper>\r\n    </>\r\n  );\r\n};\r\nexport default SearchGrid;\r\n"],"names":["handleFilters","list","useState","Checked","setChecked","className","map","value","index","key","style","color","onChange","currentIndex","indexOf","newChecked","push","splice","handleToggle","name","type","checked","label","Value","setValue","event","target","id","styled","useTranslation","t","defaultCountries","i18n","error","setError","success","setSucces","title","setTitle","city","setCity","isList","setIsList","rangeValues","setRangeValues","jobs","setJobs","useEffect","JobPostServiceIml","then","response","data","undefined","setAuth","isAuthenticated","setIsAuthenticated","localStorage","getItem","minBudget","maxBudget","experienceYear","employmentTypes","numDayAgo","titles","cities","positions","skills","others","filter","setFilter","selectedOptions","setSelectedOptions","jobGrid","job","Link","to","src","imgB1","alt","workplaceType","employmentType","description","onClick","axios","API_BASE_URL","headers","Authorization","status","countTimer","setInterval","clearInterval","console","log","errMsg","REDIRECT_BASE_URL","catch","applyForJob","saveForJob","jobList","imgF","iconL","address","iconS","iconC","createTime","handleNumber","parseInt","filters","category","variables","newFilters","minSalaryValues","maxSalaryValues","length","postTime","PageWrapper","toFixed","Range","values","step","min","max","renderTrack","props","children","role","tabIndex","onMouseDown","onTouchStart","height","display","width","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","outline","onSubmit","preventDefault","e","placeholder","options","border","isSearchable"],"sourceRoot":""}