{"version":3,"file":"component---src-pages-app-js-138b4bed326faec6a9af.js","mappings":"iQAiBA,G,yBCJkB,WAEhB,OACE,gCACE,gBAACA,EAAA,EAAW,CACVC,aAAc,CACZC,QAAS,sBAGX,gBAACC,EAAA,EAAI,MACL,gBAACC,EAAA,EAAY,MACb,gBAACC,EAAA,EAAU,MACX,gBAACC,EAAA,EAAM,MACP,gBAACC,EAAA,EAAQ,MACT,gBAACC,EAAA,EAAQ,OAIjB,E","sources":["webpack://justcamp-gatsby/./src/pages/app.js","webpack://justcamp-gatsby/./src/app/App.js"],"sourcesContent":["// import React from \"react\"\r\n// import { Router } from \"@reach/router\"\r\n// import Layout from \"../components/Layout\"\r\n// import ModalSignIn from \"../components/ModalSignIn\"\r\n\r\n// const App = () => (\r\n//   <Layout>\r\n//     <Router>\r\n//       <ModalSignIn path=\"/app/login\" />\r\n//     </Router>\r\n//   </Layout>\r\n// )\r\n\r\n// export default App\r\n\r\nimport App from '../app/App' // make sure this path corresponds to your path\r\n\r\nexport default App","import React, { useEffect } from \"react\";\r\nimport PageWrapper from \"../components/PageWrapper\";\r\nimport Hero from \"../sections/landing1/Hero\";\r\nimport Brands from \"../sections/landing1/Brands\";\r\nimport Categories from \"../sections/landing1/Categories\";\r\nimport Content1 from \"../sections/landing1/Content1\";\r\nimport FeaturedJobs from \"../sections/landing1/FeaturedJobs\";\r\nimport Content2 from \"../sections/landing1/Content2\";\r\nimport { graphql } from 'gatsby';\r\n// import 'simplebar/dist/simplebar.min.css'\r\n// import '../styles/index.css'\r\n// import '../index.css'\r\n\r\nconst IndexPage = () => {\r\n  const isSSR = typeof window === \"undefined\";\r\n  return (\r\n    <>\r\n      <PageWrapper\r\n        headerConfig={{\r\n          bgClass: \"dynamic-sticky-bg\",\r\n        }}\r\n      >\r\n        <Hero />\r\n        <FeaturedJobs />\r\n        <Categories />\r\n        <Brands />\r\n        <Content1 />\r\n        <Content2 />\r\n      </PageWrapper>\r\n    </>\r\n  );\r\n};\r\nexport default IndexPage;\r\n\r\n// export const query = graphql`\r\n//   query ($language: String!) {\r\n//     i18n: allLocale(\r\n//       filter: { ns: { in: [\"index\"] }, language: { eq: $language } }\r\n//     ) {\r\n//       edges {\r\n//         node {\r\n//           ns\r\n//           data\r\n//           language\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n"],"names":["PageWrapper","headerConfig","bgClass","Hero","FeaturedJobs","Categories","Brands","Content1","Content2"],"sourceRoot":""}